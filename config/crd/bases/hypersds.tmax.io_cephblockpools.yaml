
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: cephblockpools.hypersds.tmax.io
spec:
  group: hypersds.tmax.io
  names:
    kind: CephBlockPool
    listKind: CephBlockPoolList
    plural: cephblockpools
    singular: cephblockpool
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CephBlockPool is the Schema for the cephblockpools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CephBlockPoolSpec defines the desired state of CephBlockPool
            properties:
              compressionMode:
                default: none
                description: 'The inline compression mode in Bluestore OSD to set
                  to (options are: none, passive, aggressive, force)'
                enum:
                - none
                - passive
                - aggressive
                - force
                - ""
                nullable: true
                type: string
              crushRoot:
                description: The root of the crush hierarchy utilized by the pool
                nullable: true
                type: string
              deviceClass:
                description: The device class the OSD should set to for use in the
                  pool
                nullable: true
                type: string
              enableRBDStats:
                description: EnableRBDStats is used to enable gathering of statistics
                  for all RBD images in the pool
                type: boolean
              erasureCoded:
                description: The erasure code settings
                properties:
                  algorithm:
                    description: The algorithm for erasure coding
                    type: string
                  codingChunks:
                    description: Number of coding chunks per object in an erasure
                      coded storage pool (required for erasure-coded pool type)
                    maximum: 9
                    minimum: 0
                    type: integer
                  dataChunks:
                    description: Number of data chunks per object in an erasure coded
                      storage pool (required for erasure-coded pool type)
                    maximum: 9
                    minimum: 0
                    type: integer
                required:
                - codingChunks
                - dataChunks
                type: object
              failureDomain:
                description: 'The failure domain: osd/host/(region or zone if available)
                  - technically also any type in the crush map'
                type: string
              quotas:
                description: The quota settings
                nullable: true
                properties:
                  maxObjects:
                    description: MaxObjects represents the quota in objects
                    format: int64
                    type: integer
                  maxSize:
                    description: MaxSize represents the quota in bytes as a string
                    pattern: ^[0-9]+[\.]?[0-9]*([KMGTPE]i|[kMGTPE])?$
                    type: string
                type: object
              replicated:
                description: The replication settings
                properties:
                  size:
                    description: Size - Number of copies per object in a replicated
                      storage pool, including the object itself (required for replicated
                      pool type)
                    minimum: 0
                    type: integer
                  targetSizeRatio:
                    anyOf:
                    - type: integer
                    - type: string
                    description: TargetSizeRatio gives a hint (%) to Ceph in terms
                      of expected consumption of the total cluster capacity
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                required:
                - size
                type: object
            type: object
          status:
            description: CephBlockPoolStatus defines the observed state of CephBlockPool
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: CephBlockPoolState is the current state of CephBlockPool
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
